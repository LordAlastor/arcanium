use Libraries.Containers.Array
use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent

class BehaviorQueue 

    Array<Behavior> queue
    Behavior currentBehavior
    boolean shouldRun = true

    action Update(number seconds)
        if currentBehavior = undefined
            return now
        end

        if queue:IsEmpty()
            shouldRun = true
        end

        if currentBehavior:IsFinished()
            NextBehavior()
        else
            currentBehavior:Update(seconds)
        end
    end

    action AddBehavior(Behavior behavior)
output "shouldRun = " + shouldRun
        queue:Add(behavior)
        if shouldRun
            NextBehavior()
        end
    end

    private action NextBehavior
        shouldRun = false
output "checked undefined"
        if currentBehavior not= undefined
output "call dispose"
            currentBehavior:Dispose()
        end
output "after call"
        if queue:IsEmpty()
            currentBehavior = undefined
        else
            currentBehavior = queue:RemoveFromFront()

            BehaviorEvent event
            currentBehavior:Run(event)
        end
    end

    action StopBehaviors
        currentBehavior:Dispose()
        currentBehavior = undefined
        queue:Empty()
    end
end