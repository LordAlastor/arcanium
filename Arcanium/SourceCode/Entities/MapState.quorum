use Libraries.Containers.Array
use Libraries.Containers.Iterator
use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Game.Graphics.Color
use Libraries.Game.Graphics.Drawable
use Libraries.Game.GameStateManager

// this class serves as a way to keep track of the map state
// used to keep track of actions that need to be done before a map is completed 

class MapState
    MapList maps
//    GameStateManager manager 
//    Main main

    // cinematic effects
    CinematicSequencer cineSequencer
    ColorFadeBehavior fadeFromBlack
    ColorFadeBehavior fadeToBlack
    Drawable rectangle1
    Color color


    // introduction map
    number jewelsTouched = 0

    on create
        SetupCinematicEffects()
    end

    action Update(number seconds, text mapName)
        // Check if map conditions have been met for things like cutscenes, map completion conditions, etc.
        if  mapName = maps:INTRODUCTION_MAP and jewelsTouched / 2 = 6
            output "condition met for introduction!" 
            jewelsTouched = jewelsTouched + 1

            InteriorHouse interiorHouse
            interiorHouse:Run()
        end
    end

    action SetupCinematicEffects
        fadeFromBlack:SetFade(0,0,0,1, 6)
        fadeToBlack:SetFade(0,0,0,0.25,4)    
    end

    action UpdateJewelsTouched
        jewelsTouched = jewelsTouched + 1
        output "jewels touched: " + jewelsTouched
    end

    action UpdateTomeTouched
        tomeTouched = true
        output "tome touched: " + tomeTouched
    end
end