use Libraries.Data.Formats.JavaScriptObjectNotation
use Libraries.System.File

class Spell is Attack
    
    integer manaCost = 1                    //mana cost of a spell

    action ParseJSON()
        integer ID = GetID()                //Spell's ID must be set before call
        JavaScriptObjectNotation attackTypes
        File attacksList
        attacksList:SetPath("Assets\Attacks\Attacks.json")
        attackTypes:Read(attacksList)
        JavaScriptObjectNotation spellData = attackTypes:GetObject("spells")

        JavaScriptObjectNotation currentSpell
        integer i = 0
        boolean found = false
        repeat while (i < spellData:GetSize() and not found)
            currentSpell = spellData:Get(i)
            if currentSpell:GetValue("spellID") = ID:GetText()
                found = true
            else
                i = i + 1
            end
        end

        if not found
            output "Temporary Error: spell not found"
        else
            SetName(currentSpell:GetValue("name"))
            SetBaseDamage(currentSpell:GetValue("baseDamage"):ParseInteger())
            SetMultiTarget(currentSpell:GetValue("multiTarget"):ParseBoolean())
            SetCanHeal(currentSpell:GetValue("canHeal"):ParseBoolean())
            SetCanDamage(currentSpell:GetValue("canDamage"):ParseBoolean())
            SetManaCost(currentSpell:GetValue("manaCost"):ParseInteger())
            spellData = currentSpell:GetObject("statusCodes")
            i = 0
            Status currentStatus
            repeat while (i < spellData:GetSize())
                currentStatus:SetStatusID(spellData:Get(i):GetValue():ParseInteger())
                currentStatus:ParseJSON()
                AddToStatuses(currentStatus)
                i = i + 1
            end
        end
    end

/*******************************************************************************
                    Getters and Setters Below This Point
*******************************************************************************/

    action SetManaCost(integer newManaCost)
        manaCost = newManaCost
    end

    action GetManaCost() returns integer
        return manaCost
    end
end