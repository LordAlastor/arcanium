/**********************************************************
  Class for any Map Transitions
  Inherits from Behavior for modularity

  Initialize with SetTransition(1, 2, 3)
   1. MAP of the current map
   2. TEXT (name) of the map to transition to
   3. ARRAY with the current INTERACTABLEs

  Set PLAYER's new position with SetCoordinates()
  Remove current MAP and load new MAP with Run()
  * Also sets PLAYER in new position (default = (0,0))
**********************************************************/
use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Game.GameStateManager
use Libraries.Game.Graphics.Drawable
use Libraries.Containers.Array

class MapTransitionBehavior is Behavior
    // List of variables for MAPTRANSITIONBEHAVIOR
    GameStateManager manager            // Used to get MAIN
    MapList maps                        // all of the map names
    Map currentMap                      // Current MAP
    text mapName = ""                   // New map name
    Array<Interactable> npcList

    // New player position
    number playerX = 0
    number playerY = 0

    action Run(BehaviorEvent event)
        // Debugging output
        output "Transition"

        // Get the MAIN for level loading
        Main main = cast(Main, manager:GetGame())

        // here will be the logic that will control for every map if it can be loaded
        // this mainly matters for maps where there are no physical collision obstacles from the map transition collider
        // example: in the introduction, you cannot go to the interior house until touching all of the jewels

        if currentMap:name = maps:INTRODUCTION_MAP and main:introductionJewelsTouched < 6
            // do nothing
        else // allow the map to be loaded
            // Create a new MAP to load
            Map nextMap
            nextMap:loadMap(mapName)
            nextMap:loadCollisionLayer(mapName)
            // NOTE: these two SHOULD be loaded every single time, but they are currently commented out because not all maps have this data yet
            nextMap:loadInteractables(mapName)
            nextMap:loadMapTransitions(mapName)

            // Add the drawables to the default layer
            main:Add(nextMap:testMap) 

            // Render all of the collision objects
            i = 0
            repeat nextMap:collisions:GetSize() times
                main:Add(nextMap:collisions:Get(i))
                i = i + 1
            end

            // if the map name exists in the array of maps, then also load in the above layer
            if nextMap:inAboveMaps(mapName)
                nextMap:loadAboveLayer(mapName)
            end

            // Remove the current MAP
            main:AddToRemove(currentMap:testMap)

            // Remove the current collsions
            i = 0
            repeat currentMap:collisions:GetSize() times
                main:AddToRemove(currentMap:collisions:Get(i))
                i = i + 1
            end

            // Remove the current interactables
            i = 0
            repeat currentMap:interactables:GetSize() times
                main:AddToRemove(currentMap:interactables:Get(i))
                i = i + 1
            end

            // Remove the current transitions
            i = 0
            repeat currentMap:transitions:GetSize() times
                main:AddToRemove(currentMap:transitions:Get(i))
                i = i + 1
            end

            // Add the new MAP + collisions + player
            main:SetMap(nextMap)
            main:GetPlayer():playerSprite:SetX(playerX * 32)
            main:GetPlayer():playerSprite:SetY(playerY * 32)

            main:Add(main:GetPlayer():playerSprite)
        end
    end

    // Initializer of MAPTRANSITIONBEHAVIOR 
    action SetTransition(Map oldMap, text newName)
        currentMap = oldMap
        mapName = newName

        output newName
        output "in setTransition"
    end

    // Sets the PLAYER's new position
    action SetCoordinates(number newX, number newY)
        playerX = newX
        playerY = newY
    end

	// Add an INTERACTABLE to the LIST for the new MAP
    action AddNPC(Interactable newNPC)
        npcList:Add(newNPC)
    end
end