/**********************************************************
  Class for any Map Transitions
  Inherits from Behavior for modularity

  Initialize with SetTransition(1, 2)
   1. MAP of the current map
   2. TEXT (name) of the map to transition to

  Set PLAYER's new position with SetCoordinates()
  Remove current MAP and load new MAP with Run()
  * Also sets PLAYER in new position (defaults to center)
**********************************************************/
use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Game.GameStateManager
use Libraries.Game.Graphics.Drawable
use Libraries.Containers.Array

class MapTransitionBehavior is Behavior
    // List of variables for MAPTRANSITIONBEHAVIOR
    GameStateManager manager            // Used to get MAIN
    Map currentMap                      // Current MAP
    text mapName = ""                   // New map name
    number playerX = 0                  // New Player X coordinate
    number playerY = 0                  // New Player Y coordinate

    action Run(BehaviorEvent event)
        if mapName not= "Not Ready Yet"
            // Debugging output
            output "Transition to " + mapName

            // Get the MAIN for level loading
            Main main = cast(Main, manager:GetGame())

// ================ Ryan: Starting Changes ================
            main:AddToRemove(main:GetMap():map)
            main:AddToRemove(main:GetMap():aboveLayer)
            i = 0
            repeat main:GetMap():collisions:GetSize() times
                main:AddToRemove(main:GetMap():collisions:Get(i))
                i = i + 1
            end
            i = 0
            repeat main:GetMap():interactables:GetSize() times
                main:AddToRemove(main:GetMap():interactables:Get(i))
                i = i + 1
            end
            i = 0
            repeat main:GetMap():transitions:GetSize() times
                main:AddToRemove(main:GetMap():transitions:Get(i))
                i = i + 1
            end
            main:Remove(main:GetPlayer():playerSprite:sprite1)
            main:RemoveCollisionListener(main)
            Map nextMap
            main:InitializeMap(nextMap, mapName)
            main:InitializeInteractables(nextMap, mapName)
            main:GetPlayer():playerSprite:sprite1:EnablePhysics(true)
            main:GetPlayer():playerSprite:sprite1:CanRotate(false)
            main:GetPlayer():playerSprite:sprite1:SetResponsive()
            main:GetPlayer():playerSprite:sprite1:SetName("player")
            main:Add(main:GetPlayer():playerSprite:sprite1)
            if playerX = 0 and playerY = 0
                main:GetPlayer():playerSprite:sprite1:SetX(nextMap:map:GetWidth() / 2)
                main:GetPlayer():playerSprite:sprite1:SetY(nextMap:map:GetHeight() / 2)
            else
                main:GetPlayer():playerSprite:sprite1:SetX(playerX * 32)
                main:GetPlayer():playerSprite:sprite1:SetY(playerY * 32)
            end
            main:LoadAboveLayer(nextMap, mapName)
            main:SetMap(nextMap)
        else
            output "This transition is unavailable."
        end
// ================= Ryan: Ending Changes =================

    end

    // Initializer of MAPTRANSITIONBEHAVIOR 
    // EDITED: will no longer need this newList parameter because the map carries all of the information about all of the layers already
    action SetTransition(Map oldMap, text newName)
        currentMap = oldMap
        mapName = newName

        output "<" + newName + "> set for MapTransition"
    end

    // Sets the PLAYER's new position
    action SetCoordinates(number newX, number newY)
        playerX = newX
        playerY = newY
    end
end