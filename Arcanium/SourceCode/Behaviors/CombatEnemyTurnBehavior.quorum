use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Game.Game
use Libraries.Containers.Array
use Libraries.Interface.Item2D

class CombatEnemyTurnBehavior is Behavior
    
    Game game
    Battle battle
    BehaviorQueue behaviorQueue
    Array<Item2D> removalArray
    Array<Combatant> combatants
    boolean finished = false

    action Run(BehaviorEvent event)
        Array<text> emptyArray

        integer counter = 1

        repeat while counter < combatants:GetSize()
            CombatEnemyActionBehavior behavior
            behavior:SetGame(game)
            behavior:SetRemovalArray(removalArray)
            behavior:SetBehaviorQueue(behaviorQueue)
            behavior:SetCombatants(combatants)
            behavior:SetEnemyIndex(counter)
            behavior:SetPreviousBehavior(me)
//            behaviorQueue:AddBehavior(behavior)
            behavior:Run(undefined)

            counter = counter + 1
        end
    end
    
    action Dispose
        Player player = cast(Player, combatants:Get(0))
        player:SetCurrentMP(player:GetCurrentMP() + 1)
        battle:PlayerTurn()
    end

    action IsFinished returns boolean
        return finished
    end

    action SetFinished(boolean newBoolean)
        finished = newBoolean
    end

    action SetGame(Game newGame)
        game = newGame
    end

    action SetRemovalArray(Array<Item2D> newArray)
        removalArray = newArray
    end

    action SetBattle(Battle newBattle)
        battle = newBattle
    end

    action SetBehaviorQueue(BehaviorQueue newQueue)
        behaviorQueue = newQueue
    end

    action SetCombatants(Array<Combatant> newArray)
        combatants = newArray
    end
end