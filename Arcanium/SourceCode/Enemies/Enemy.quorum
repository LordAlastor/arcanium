use Libraries.Containers.Array

class Enemy is Combatant

    action SetStats(text newName, integer newCurrentHP, integer newMaxHP, 
     number newAttack, number newFireEff, number newWaterEff, 
     number newEarthEff, number newWindEff, number newLightEff, number newDarkEff)
        SetName(newName)
        SetCurrentHP(newCurrentHP)
        SetMaxHP(newMaxHP)
        SetAttack(newAttack)
        SetElementsEffectiveness(0, newFireEff)
        SetElementsEffectiveness(1, newWaterEff)
        SetElementsEffectiveness(2, newEarthEff)
        SetElementsEffectiveness(3, newWindEff)
        SetElementsEffectiveness(4, newLightEff)
        SetElementsEffectiveness(5, newDarkEff)
    end

    action ReceiveSpellAttack(Spell playerSpell, Player player) 
     returns Array<text>
        Array<text> log
        number damageModifier = 0
        number tokens = 0
        integer spellID = playerSpell:GetSpellID()
        integer counter = 5
        integer elementCount = 0
        //SpellID order: 1 fire water earth air light dark

        repeat 6 times
            elementCount = spellID mod 10
            
            if (elementCount > 0)
                damageModifier = damageModifier + cast(number, elementCount) 
                 * GetElementsEffectiveness(counter)
                tokens = tokens + elementCount
            end

            spellID = spellID / 10
            counter = counter - 1
        end

        integer damage = cast(integer, damageModifier/tokens 
         * playerSpell:GetBaseDamage())
        
        //Adds text to display to player into the array
        //Results in log[incomingAttack, incomingDamage, defeated]

        text incomingAttack = player:GetName() + " cast " + playerSpell:GetName() 
         + " on enemy " + GetName() + "!"
        log:Add(incomingAttack)

        text incomingDamage = "Enemy " + GetName() + " took " + damage + " damage!"
        log:Add(incomingDamage)

        if CheckDefeated(damage)
            text defeated = "Enemy " + GetName() + " was defeated!"
            log:Add(defeated)
        end

        return log
    end

    action CheckDefeated(integer damage) returns boolean
        if GetCurrentHP() > damage
            SetCurrentHP(GetCurrentHP() - damage)
            return false
        end

        SetCurrentHP(0)
        return true
    end
end