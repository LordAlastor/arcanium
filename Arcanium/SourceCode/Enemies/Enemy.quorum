use Libraries.Containers.Array

class Enemy 
    text name = ""
    integer HP = 1
    integer MP = 1
    integer attack = 1
    Array<number> elementsEffectiveness //fire, water, earth, air, light, dark

    on create
        repeat 6 times
            elementsEffectiveness:Add(1)
        end
    end

    action SetStats(text newName, integer newHP, integer newMP, integer newAttack, 
     number newFireEff, number newWaterEff, number newEarthEff, number newWindEff, 
     number newLightEff, number newDarkEff)
        name = newName
        HP = newHP
        MP = newMP
        attack = newAttack      //No idea what to use this for
        elementsEffectiveness:Set(0, newFireEff)
        elementsEffectiveness:Set(1, newWaterEff)
        elementsEffectiveness:Set(2, newEarthEff)
        elementsEffectiveness:Set(3, newWindEff)
        elementsEffectiveness:Set(4, newLightEff)
        elementsEffectiveness:Set(5, newDarkEff)
    end

    action RecieveAttack(Spell playerSpell, Player player) returns Array<text>

        Array<text> log
        integer damage = 0
        integer charPlace = 1       //Start at second place to avoid first 1
        integer elementCount = 0
        text spellID = cast(text, playerSpell:GetSpellID())

        //SpellID order: 1 fire water earth air light dark
        repeat 6 times
            elementCount = cast(integer, spellID:GetCharacter(charPlace))
            if elementCount >= 1
                damage = damage + cast(integer, elementCount * 
                 elementsEffectiveness:Get(charPlace))
            end
            charPlace = charPlace + 1
        end
        
        //Adds text to display to player into the array
        //Results in log[incomingAttack, incomingDamage, defeated]

        text incomingAttack = player:GetName() + " cast " + playerSpell:GetName() 
         + " on enemy " + name + "!"
        log:Add(incomingAttack)

        text incomingDamage = "Enemy " + name + " took " + damage + " damage!"
        log:Add(incomingDamage)

        if CheckDefeated(damage)
            text defeated = "Enemy " + name + " was defeated!"
            log:Add(defeated)
        end

        return log
    end

    action CheckDefeated(integer damage) returns boolean
        HP = HP - damage

        if HP <= 0
            return true
        else
            return false
        end
    end
end