use Libraries.Interface.Controls.Button
use Libraries.Interface.Events.FocusListener
use Libraries.Interface.Events.FocusEvent
use Libraries.Game.Game
use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.Color
use Libraries.Containers.Array

class MenuButton is Button, FocusListener
// make MenuButton change focus when moused over
    Game game
    Array<Item2D> removalArray
    Color color
    Array<Drawable> indicators
    Array<Item2D> targets
    boolean horizontal = false
    boolean noIndicator = true

    action Dispose
        integer counter = 0

        repeat while counter < indicators:GetSize()
            removalArray:Add(indicators:Get(counter))   

            counter = counter + 1
        end
    end

    action GainedFocus(FocusEvent event)
        parent:Button:GainedFocus(event)

        integer counter = 0

        repeat while counter < targets:GetSize()
            if horizontal and targets:Get(counter) not= undefined
                indicators:Get(counter):SetPosition(targets:Get(counter):GetX() - 30, targets:Get(counter):GetY())
            elseif targets:Get(counter) not= undefined
                indicators:Get(counter):SetPosition(targets:Get(counter):GetX() + targets:Get(counter):GetWidth()/2 - 10, targets:Get(counter):GetY() + targets:Get(counter):GetHeight()+ 30)
            end

            counter = counter + 1
        end

        noIndicator = false
    end

    action LostFocus(FocusEvent event)
        integer counter = 0

        repeat while counter < indicators:GetSize()
            indicators:Get(counter):SetPosition(-1000, -1000)

            counter = counter + 1
        end
    end

    action SetGame(Game newGame)
        game = newGame
    end

    action SetRemovalArray(Array<Item2D> array)
        removalArray = array
    end

    action SetTarget(Item2D item)
        targets:Add(item)

        Drawable indicator
        indicator:LoadFilledCircle(10, color:Red())
        indicator:SetPosition(-1000, -1000)
        game:Add(indicator)
        indicators:Add(indicator)
    end

    action SetTargets(Array<Item2D> items)
        targets = items

        integer counter = 0

        repeat while counter < targets:GetSize()
            Drawable indicator
            indicator:LoadFilledCircle(10, color:Red())
            indicator:SetPosition(-1000, -1000)
            game:Add(indicator)
            indicators:Add(indicator)

            counter = counter + 1
        end
    end

    action SetHorizontal(boolean bool)
        horizontal = bool
    end
end